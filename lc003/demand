给定一个字符串 s ，请你找出其中不含有重复字符的 最长子串 的长度。

示例 1:
输入: s = "abcabcbb"
输出: 3 
解释: 因为无重复字符的最长子串是 "abc"，所以其长度为 3。

示例 2:
输入: s = "bbbbb"
输出: 1
解释: 因为无重复字符的最长子串是 "b"，所以其长度为 1。

示例 3:
输入: s = "pwwkew"
输出: 3
解释: 因为无重复字符的最长子串是 "wke"，所以其长度为 3。
     请注意，你的答案必须是 子串 的长度，"pwke" 是一个子序列，不是子串。
 
提示：
0 <= s.length <= 5 * 104
s 由英文字母、数字、符号和空格组成

class Solution {
public:
    bool isExist(string s, char ch) {
        for(auto it = s.begin(); it != s.end(); it++)
        {
            if(*it == ch)
                return true;
        }
        return false;
    }

    int lengthOfLongestSubstring(string s) {
        int len = 0, count = 0;           //函数的返回值
        string substr;

        for(int i = 0, j = 0; i < s.length();)
        {
            if(!isExist(substr, s[i]))       // 不存在此字符
            {
                substr += s[i];
                count += 1;
                i++;
            }
            else
            {
                len = (len > count ? len : count);
                j ++;
                i = j;
                substr.clear();
                count = 0;
            }
        }
        len = (len > count ? len : count);
        return len;
    }
};